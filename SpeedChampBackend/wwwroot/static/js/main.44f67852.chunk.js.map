{"version":3,"sources":["StatsItem.js","App.js","index.js"],"names":["StatsItem","prefix","children","suffix","className","selectOptions","value","Math","pow","label","App","useState","size","meta","setMeta","duration","undefined","result","setResult","calculateSpeed","pe","console","log","loaded","total","onClick","start","Date","myArray","ArrayBuffer","longInt8View","Uint8Array","i","length","initArray","axios","post","onUploadProgress","progressEvent","onDownloadProgress","then","response","onChange","e","target","map","option","ReactDOM","render","document","getElementById"],"mappings":"uOAUeA,EAVG,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OACnC,OACI,gCACI,mBAAGC,UAAU,YAAb,SAA0BH,IAC1B,mBAAGG,UAAU,0BAAb,SAAwCF,IACxC,4BAAIC,QCDVE,EAAgB,CACrB,CAAEC,MAAO,GAAKC,KAAKC,IAAI,EAAG,IAAKC,MAAO,SACtC,CAAEH,MAAO,IAAMC,KAAKC,IAAI,EAAG,IAAKC,MAAO,UACvC,CAAEH,MAAO,IAAOC,KAAKC,IAAI,EAAG,IAAKC,MAAO,YAsG1BC,EAnGH,WACX,MAAwBC,mBAAS,CAChCC,KAAMP,EAAc,GAAGC,QADxB,mBAAOO,EAAP,KAAaC,EAAb,KAIA,EAA4BH,mBAAS,CACpCI,cAAUC,IADX,mBAAOC,EAAP,KAAeC,EAAf,KAyCMC,EAAiB,SAACC,GACtBC,QAAQC,IAAIF,EAAGG,OAAQ,MAAOH,EAAGI,QAgBnC,OACC,sBAAKpB,UAAU,2BAAf,UACC,oBAAIA,UAAU,sCAAd,wBACA,sBAAKA,UAAU,wBAAf,UACC,wBACCA,UAAU,iEACVqB,QAhDU,WACb,IAAMC,EAAQ,IAAIC,MAbD,WAKjB,IAJA,IAAIC,EAAU,IAAIC,YAAYhB,EAAKD,MAC/BkB,EAAe,IAAIC,WAAWH,GAGzBI,EAAI,EAAGA,EAAIF,EAAaG,OAAQD,IACxCF,EAAaE,GAAKA,EAAI,IAQVE,GAEbC,IAAMC,KAAK,mCAAoC,GAAI,CAClDC,iBAAkB,SAACC,GAClBjB,QAAQC,IAAI,aACZH,EAAemB,IAEhBC,mBAAoB,SAACD,GACpBjB,QAAQC,IAAI,eACZD,QAAQC,IAAIgB,MAGbE,MAAK,SAAAC,GACL,IACM1B,EADM,IAAIY,KACOD,EAEvBR,EAAU,2BACND,GADK,IAERF,kBA0BA,+BAMA,wBAAQT,MAAOO,EAAKD,KAAM8B,SAAU,SAAAC,GAAC,OAAI7B,EAAQ,2BAAKD,GAAN,IAAYD,KAAM+B,EAAEC,OAAOtC,UAAUF,UAAU,gBAA/F,SACEC,EAAcwC,KAAI,SAAAC,GAAM,OACxB,wBAA2BxC,MAAOwC,EAAOxC,MAAzC,SAAiDwC,EAAOrC,OAA3CqC,EAAOxC,eAIvB,sBAAKF,UAAU,qCAAf,UACC,cAAC,EAAD,CAAWH,OAAO,OAAOE,OAAO,KAAhC,gBAGA,cAAC,EAAD,CAAWF,OAAO,WAAWE,OAAO,SAApC,iBAGA,cAAC,EAAD,CAAWF,OAAO,SAASE,OAAO,SAAlC,sBAIEc,EAAOF,UACT,sBAAKX,UAAU,iCAAf,UACEa,EAAOF,SAAW,IADpB,WChGJgC,IAASC,OACR,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.44f67852.chunk.js","sourcesContent":["const StatsItem = ({ prefix, children, suffix }) => {\r\n    return (\r\n        <div>\r\n            <p className=\"font-bold\">{prefix}</p>\r\n            <p className=\"font-bold text-3xl my-3\">{children}</p>\r\n            <p>{suffix}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StatsItem;","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport StatsItem from \"./StatsItem\";\n\nconst selectOptions = [\n\t{ value: 10 * Math.pow(2, 20), label: \"10 MB\" },\n\t{ value: 100 * Math.pow(2, 20), label: \"100 MB\" },\n\t{ value: 1000 * Math.pow(2, 20), label: \"1000 MB\" }\n];\n\nconst App = () => {\n\tconst [meta, setMeta] = useState({\n\t\tsize: selectOptions[0].value\n\t});\n\n\tconst [result, setResult] = useState({\n\t\tduration: undefined\n\t});\n\n\tconst initArray = () => {\n\t\tlet myArray = new ArrayBuffer(meta.size);\n\t\tlet longInt8View = new Uint8Array(myArray);\n\n\t\t// generate some data\n\t\tfor (let i = 0; i < longInt8View.length; i++) {\n\t\t\tlongInt8View[i] = i % 256;\n\t\t}\n\n\t\treturn longInt8View;\n\t};\n\n\tconst start = () => {\n\t\tconst start = new Date();\n\t\tconst data = initArray();\n\n\t\taxios.post(\"http://localhost:5000/speedchamp\", {}, {\n\t\t\tonUploadProgress: (progressEvent) => {\n\t\t\t\tconsole.log(\"on upload\");\n\t\t\t\tcalculateSpeed(progressEvent);\n\t\t\t},\n\t\t\tonDownloadProgress: (progressEvent) => {\n\t\t\t\tconsole.log(\"on download\");\n\t\t\t\tconsole.log(progressEvent);\n\t\t\t}\n\t\t})\n\t\t.then(response => {\n\t\t\tconst end = new Date();\n\t\t\tconst duration = end - start;\n\n\t\t\tsetResult({\n\t\t\t\t...result,\n\t\t\t\tduration\n\t\t\t});\n\t\t})\n\t};\n\n\tconst calculateSpeed = (pe) => {\n\t\t\tconsole.log(pe.loaded, \"von\", pe.total);\n\t};\n\n\tconst formatBytes = (bytes, decimals = 2) => {\n\t\tif (bytes === 0) {\n\t\t\treturn \"0 Bytes\";\n\t\t}\n\n\t\tconst k = 1024;\n\t\tconst dm = decimals < 0 ? 0 : decimals;\n\t\tconst sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n\t\tconst i = Math.floor(Math.log(bytes) / Math.log(k));\n\n\t\treturn parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\n\t};\n\n\treturn (\n\t\t<div className=\"mx-auto w-3/5 space-y-12\">\n\t\t\t<h1 className=\"text-4xl font-bold pt-6 text-center\">SpeedChamp</h1>\n\t\t\t<div className=\"text-center space-y-3\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"px-6 py-3 text-center bg-blue-600 font-bold text-white rounded\"\n\t\t\t\t\tonClick={start}\n\t\t\t\t>\n\t\t\t\t\tSpeedtest starten\n\t\t\t\t</button>\n\t\t\t\t<select value={meta.size} onChange={e => setMeta({ ...meta, size: e.target.value })} className=\"block mx-auto\">\n\t\t\t\t\t{selectOptions.map(option =>(\n\t\t\t\t\t\t<option key={option.value} value={option.value}>{option.label}</option>\n\t\t\t\t\t))}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t<div className=\"grid grid-cols-3 gap-6 text-center\">\n\t\t\t\t<StatsItem prefix=\"Ping\" suffix=\"ms\">\n\t\t\t\t\t12\n\t\t\t\t</StatsItem>\n\t\t\t\t<StatsItem prefix=\"Download\" suffix=\"Mbit/s\">\n\t\t\t\t\t554\n\t\t\t\t</StatsItem>\n\t\t\t\t<StatsItem prefix=\"Upload\" suffix=\"Mbit/s\">\n\t\t\t\t\t123\n\t\t\t\t</StatsItem>\n\t\t\t</div>\n\t\t\t{!!result.duration && (\n\t\t\t\t<div className=\"text-center text-3xl font-bold\">\n\t\t\t\t\t{result.duration / 1000}s\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<App />,\n\tdocument.getElementById(\"root\")\n);"],"sourceRoot":""}