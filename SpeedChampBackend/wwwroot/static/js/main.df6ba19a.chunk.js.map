{"version":3,"sources":["App.js","index.js","StatsItem.js"],"names":["selectOptions","value","label","Math","pow","App","useState","size","meta","setMeta","duration","undefined","upload","download","result","setResult","start","data","myArray","ArrayBuffer","longInt8View","Uint8Array","i","length","initArray","Date","axios","post","Buffer","from","headers","onUploadProgress","progressEvent","calculateSpeed","onDownloadProgress","then","response","console","log","pe","now","lengthComputable","total","mbps","loaded","className","onClick","onChange","e","target","map","option","prefix","suffix","toFixed","ReactDOM","render","document","getElementById","StatsItem","children"],"mappings":"sMAIMA,EAAgB,CAErB,CAAEC,MAAO,IAAYC,MAAO,SAC5B,CAAED,MAAO,IAAME,KAAKC,IAAI,EAAG,IAAKF,MAAO,WA2HzBG,IApHH,WACX,MAAwBC,mBAAS,CAChCC,KAAMP,EAAc,GAAGC,QADxB,mBAAOO,EAAP,KAAaC,EAAb,KAIA,EAA4BH,mBAAS,CACpCI,cAAUC,EACVC,YAAQD,EACRE,cAAUF,IAHX,mBAAOG,EAAP,KAAeC,EAAf,KAkBMC,EAAQ,WACb,IAAMC,EAbW,WAKjB,IAJA,IAAIC,EAAU,IAAIC,YAAYX,EAAKD,MAC/Ba,EAAe,IAAIC,WAAWH,GAGzBI,EAAI,EAAGA,EAAIF,EAAaG,OAAQD,IACxCF,EAAaE,GAAKA,EAAI,IAGvB,OAAOF,EAIMI,GACPR,EAAQ,IAAIS,KAElBC,IAAMC,KAAN,UA7Be,yBA6Bf,eAAqCC,EAAOC,KAAKZ,GAAO,CACvDa,QAAS,CAAE,eAAgB,qBAC3BC,iBAAkB,SAACC,GAClBC,EAAeD,EAAehB,IAE/BkB,mBAAoB,SAACF,EAAehB,OAIpCmB,MAAK,SAAAC,GACL,IACM1B,EADM,IAAIe,KACOT,EAEvBqB,QAAQC,IAAIF,GAEZrB,GAAU,SAAAD,GAAM,kCACZA,GADY,IAEfJ,oBAKGuB,EAAiB,SAACM,EAAIvB,GAC3B,IAAMwB,EAAM,IAAIf,KAEhB,GAAIc,EAAGE,kBAAoBF,EAAGG,MAAQ,EAAG,CACxC,IACIC,EADMJ,EAAGK,SAAWJ,EAAMxB,GAAS,KACtB,KAAO,KAAO,EAE/BD,GAAU,SAAAD,GAAM,kCACZA,GADY,IAEfF,OAAQ+B,SAkBX,OACC,sBAAKE,UAAU,2BAAf,UACC,oBAAIA,UAAU,sCAAd,wBACA,sBAAKA,UAAU,wBAAf,UACC,wBACCA,UAAU,iEACVC,QAAS,kBAAM9B,KAFhB,+BAMA,wBAAQf,MAAOO,EAAKD,KAAMwC,SAAU,SAAAC,GAAC,OAAIvC,EAAQ,2BAAKD,GAAN,IAAYD,KAAMyC,EAAEC,OAAOhD,UAAU4C,UAAU,gBAA/F,SACE7C,EAAckD,KAAI,SAAAC,GAAM,OACxB,wBAA2BlD,MAAOkD,EAAOlD,MAAzC,SAAiDkD,EAAOjD,OAA3CiD,EAAOlD,eAIvB,sBAAK4C,UAAU,qCAAf,UACC,cAAC,IAAD,CAAWO,OAAO,OAAOC,OAAO,KAAhC,eAGA,cAAC,IAAD,CAAWD,OAAO,WAAWC,OAAO,SAApC,SACGvC,EAAOD,SACR,+BAAOC,EAAOF,OAAO0C,QAAQ,KAC1B,MAEL,cAAC,IAAD,CAAWF,OAAO,SAASC,OAAO,SAAlC,SACIvC,EAAOF,OACT,+BAAOE,EAAOF,OAAO0C,QAAQ,KAC1B,WAGHxC,EAAOJ,UACT,sBAAKmC,UAAU,iCAAf,UACE/B,EAAOJ,SAAW,IADpB,a,yDC1HJ,wDAKA6C,IAASC,OACR,cAAC,IAAD,IACAC,SAASC,eAAe,U,+DCGVC,IAVG,SAAC,GAAkC,IAAhCP,EAA+B,EAA/BA,OAAQQ,EAAuB,EAAvBA,SAAUP,EAAa,EAAbA,OACnC,OACI,gCACI,mBAAGR,UAAU,YAAb,SAA0BO,IAC1B,mBAAGP,UAAU,0BAAb,SAAwCe,IACxC,4BAAIP,U","file":"static/js/main.df6ba19a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport StatsItem from \"./StatsItem\";\n\nconst selectOptions = [\n\t// { value: 10 * Math.pow(2, 20), label: \"10 MB\" },\n\t{ value: 20_000_000, label: \"20 MB\" },\n\t{ value: 100 * Math.pow(2, 20), label: \"100 MB\" },\n\t// { value: 1000 * Math.pow(2, 20), label: \"1000 MB\" }\n];\n\n// const BASE_URL = process.env.NODE_ENV === \"development\" ? \"http://localhost:5000\": \"https://speedchamp.org\";\nconst BASE_URL = \"https://speedchamp.org\";\n\nconst App = () => {\n\tconst [meta, setMeta] = useState({\n\t\tsize: selectOptions[0].value\n\t});\n\n\tconst [result, setResult] = useState({\n\t\tduration: undefined,\n\t\tupload: undefined,\n\t\tdownload: undefined\n\t});\n\n\tconst initArray = () => {\n\t\tlet myArray = new ArrayBuffer(meta.size);\n\t\tlet longInt8View = new Uint8Array(myArray);\n\n\t\t// generate some data\n\t\tfor (let i = 0; i < longInt8View.length; i++) {\n\t\t\tlongInt8View[i] = i % 256;\n\t\t}\n\n\t\treturn longInt8View;\n\t};\n\n\tconst start = () => {\n\t\tconst data = initArray();\n\t\tconst start = new Date();\n\n\t\taxios.post(`${BASE_URL}/speedchamp`, Buffer.from(data), {\n\t\t\theaders: { \"Content-Type\": \"text/octet-stream\" },\n\t\t\tonUploadProgress: (progressEvent) => {\n\t\t\t\tcalculateSpeed(progressEvent, start);\n\t\t\t},\n\t\t\tonDownloadProgress: (progressEvent, start) => {\n\n\t\t\t}\n\t\t})\n\t\t.then(response => {\n\t\t\tconst end = new Date();\n\t\t\tconst duration = end - start;\n\n\t\t\tconsole.log(response);\n\n\t\t\tsetResult(result => ({\n\t\t\t\t...result,\n\t\t\t\tduration\n\t\t\t}));\n\t\t})\n\t};\n\n\tconst calculateSpeed = (pe, start) => {\n\t\tconst now = new Date();\n\n\t\tif (pe.lengthComputable && pe.total > 0) {\n\t\t\tlet bps = pe.loaded / ((now - start) / 1000);\n\t\t\tlet mbps = bps / 1024 / 1024 * 8;\n\n\t\t\tsetResult(result => ({\n\t\t\t\t...result,\n\t\t\t\tupload: mbps\n\t\t\t}));\n\t\t}\n\t};\n\n\tconst formatBytes = (bytes, decimals = 2) => {\n\t\tif (bytes === 0) {\n\t\t\treturn \"0 Bytes\";\n\t\t}\n\n\t\tconst k = 1024;\n\t\tconst dm = decimals < 0 ? 0 : decimals;\n\t\tconst sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n\t\tconst i = Math.floor(Math.log(bytes) / Math.log(k));\n\n\t\treturn parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\n\t};\n\n\treturn (\n\t\t<div className=\"mx-auto w-3/5 space-y-12\">\n\t\t\t<h1 className=\"text-4xl font-bold pt-6 text-center\">SpeedChamp</h1>\n\t\t\t<div className=\"text-center space-y-3\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"px-6 py-3 text-center bg-blue-600 font-bold text-white rounded\"\n\t\t\t\t\tonClick={() => start()}\n\t\t\t\t>\n\t\t\t\t\tSpeedtest starten\n\t\t\t\t</button>\n\t\t\t\t<select value={meta.size} onChange={e => setMeta({ ...meta, size: e.target.value })} className=\"block mx-auto\">\n\t\t\t\t\t{selectOptions.map(option =>(\n\t\t\t\t\t\t<option key={option.value} value={option.value}>{option.label}</option>\n\t\t\t\t\t))}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t<div className=\"grid grid-cols-3 gap-6 text-center\">\n\t\t\t\t<StatsItem prefix=\"Ping\" suffix=\"ms\">\n\t\t\t\t\t-\n\t\t\t\t</StatsItem>\n\t\t\t\t<StatsItem prefix=\"Download\" suffix=\"Mbit/s\">\n\t\t\t\t{!!result.download ? (\n\t\t\t\t\t\t<span>{result.upload.toFixed(2)}</span>\n\t\t\t\t\t) : \"-\"}\n\t\t\t\t</StatsItem>\n\t\t\t\t<StatsItem prefix=\"Upload\" suffix=\"Mbit/s\">\n\t\t\t\t\t{!!result.upload ? (\n\t\t\t\t\t\t<span>{result.upload.toFixed(2)}</span>\n\t\t\t\t\t) : \"-\"}\n\t\t\t\t</StatsItem>\n\t\t\t</div>\n\t\t\t{!!result.duration && (\n\t\t\t\t<div className=\"text-center text-3xl font-bold\">\n\t\t\t\t\t{result.duration / 1000}s\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<App />,\n\tdocument.getElementById(\"root\")\n);","const StatsItem = ({ prefix, children, suffix }) => {\r\n    return (\r\n        <div>\r\n            <p className=\"font-bold\">{prefix}</p>\r\n            <p className=\"font-bold text-3xl my-3\">{children}</p>\r\n            <p>{suffix}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StatsItem;"],"sourceRoot":""}